((global, factory) ->
    if typeof exports isnt 'undefined'
        # Node/CommonJS
        depsLoader = require 'umd-stdlib/core/depsLoader'
        module.exports = factory global, depsLoader, $
    else if typeof define is 'function' and define.amd
        # AMD
        define ['umd-stdlib/core/depsLoader', 'jquery'], (depsLoader, $)->
            factory global, depsLoader, $
            return
    return
) window, (global, depsLoader, $)->
    'use strict'

    # Wait for DOM ready before doing anything
    $ ->
        global.depsLoader = depsLoader
        if typeof exports isnt 'undefined'
            # Node/CommonJS
            application = require 'application'
            application.start()
        else if typeof define is 'function' and define.amd
            # AMD

            # TODO: add brunch vendor folder support for shim config
            # TODO: put modernizr
            #   vendor => no wrap + shim defined in brunch config
            # 
            # modernizr has no define function
            requirejs.config shim: 'umd-stdlib/core/modernizr.custom': exports: 'Modernizr'

            require ['application'], (application)->
                application.start()
                return
        return
